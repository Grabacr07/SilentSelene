<Page x:Class="SilentSelene.UI.Preferences.Generals"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
      xmlns:metro="http://schemes.grabacr.net/winfx/2015/personal/controls"
      xmlns:local="clr-namespace:SilentSelene.UI.Preferences"
      xmlns:binds="clr-namespace:SilentSelene.UI.Preferences.Bindings"
      mc:Ignorable="d"
      Title="アプリ設定"
      d:DesignWidth="800"
      d:DesignHeight="450"
      d:DataContext="{d:DesignInstance {x:Type binds:DesignTimeGenerals}, IsDesignTimeCreatable=True}">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/UI/Preferences/Styles.Common.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <StackPanel Style="{DynamicResource PageContentHostStyle}">
        <ui:CardExpander Icon="WindowWrench48">
            <ui:CardExpander.Header>
                <metro:TextPair Text="タイマー表示"
                                SubText="タイマーを表示するミニ ウィンドウの動作を設定します。" />
            </ui:CardExpander.Header>
            <StackPanel Style="{DynamicResource ExpanderContentHostStyle}">
                <CheckBox Content=" 常に最前面に表示する "
                          IsChecked="{Binding TopMost.Value, Mode=TwoWay}" />
                <Border Style="{DynamicResource ExpanderContentSeparatorStyle}" />
                <CheckBox IsChecked="{Binding ShowInTaskbar.Value, Mode=TwoWay}">
                    <StackPanel>
                        <TextBlock Text=" タスク バーを表示する" />
                        <Border Height="2" />
                        <TextBlock Text=" このチェックをオフにすると、ウィンドウ最小化時はタスクトレイに格納されます。"
                                   Foreground="{DynamicResource TextFillColorTertiaryBrush}" />
                    </StackPanel>
                </CheckBox>
            </StackPanel>
        </ui:CardExpander>
        <ui:CardExpander Icon="Alert32">
            <ui:CardExpander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <metro:TextPair Grid.Column="0"
                                    Text="デスクトップ通知"
                                    SubText="天然樹脂が回復したらデスクトップに通知します。" />
                    <StackPanel Grid.Column="1"
                                Orientation="Horizontal">
                        <TextBlock Text="{Binding NotifyOverFlowLabel.Value, Mode=OneWay}"
                                   FontSize="14"
                                   VerticalAlignment="Center" />
                        <ui:ToggleSwitch IsChecked="{Binding NotifyOverflow.Value, Mode=TwoWay}"
                                         Margin="12,0" />
                    </StackPanel>
                </Grid>
            </ui:CardExpander.Header>
            <StackPanel Style="{DynamicResource ExpanderContentHostStyle}"
                        IsEnabled="{Binding NotifyOverflow.Value, Mode=OneWay}">
                <DockPanel>
                    <TextBox DockPanel.Dock="Right"
                             Text="{Binding OverflowResin.Value, Mode=TwoWay}"
                             Width="100" />
                    <TextBlock Text="樹脂がこの値になったときに通知"
                               VerticalAlignment="Center" />
                </DockPanel>
                <Border Style="{DynamicResource ExpanderContentSeparatorStyle}" />
                <ui:HyperlinkButton Content="通知のテスト"
                                    Icon="AlertOn24"
                                    Margin="0,0,0,-4">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Click">
                            <livet:LivetCallMethodAction MethodTarget="{Binding}"
                                                         MethodName="TestNotification" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ui:HyperlinkButton>
            </StackPanel>
        </ui:CardExpander>
    </StackPanel>
</Page>
