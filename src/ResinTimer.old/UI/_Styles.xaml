<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
                    xmlns:utils="http://schemes.grabacr.net/winfx/2015/personal/controls">

    <DataTemplate x:Key="InProgressTemplateKey">
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <TextBlock Text="L"
                       FontSize="48"
                       FontFamily="Yu Gothic UI Light"
                       Margin="12" />
            <metro:ProgressRing EllipseDiameter="4"
                                EllipseOffset="20"
                                Margin="12,18,12,12" />
            <TextBlock Text="A D I N G"
                       FontSize="48"
                       FontFamily="Yu Gothic UI Light"
                       Margin="12" />
        </StackPanel>
    </DataTemplate>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="H1TextStyleKey"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize"
                Value="28" />
        <Setter Property="Margin"
                Value="24,0" />
    </Style>

    <Style x:Key="H2TextStyleKey"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize"
                Value="20" />
    </Style>

    <Style x:Key="H3TextStyleKey"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Margin"
                Value="0,16,0,2" />
    </Style>

    <Style x:Key="H3ElementBlockStyleKey"
           TargetType="{x:Type FrameworkElement}">
        <Setter Property="Margin"
                Value="0,6" />
    </Style>

    <Style x:Key="H2SeparatorStyleKey"
           TargetType="{x:Type FrameworkElement}">
        <Setter Property="Height"
                Value="40" />
    </Style>

    <Style x:Key="DescriptionTextStyleKey"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="TextWrapping"
                Value="Wrap" />
        <Setter Property="Foreground"
                Value="{DynamicResource InactiveForegroundBrushKey}" />
        <Setter Property="Margin"
                Value="0,10,0,0" />
    </Style>

    <Style x:Key="ReadOnlyTextBoxStyleKey"
           TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="TextWrapping"
                Value="Wrap" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundBrushKey}" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="CancelButtonStyleKey"
           TargetType="{x:Type utils:CallMethodButton}">
        <Setter Property="FontFamily"
                Value="Segoe MDL2 Assets" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Padding"
                Value="12,8" />
    </Style>

    <Style x:Key="PopupToggleButtonStyleKey"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrushKey}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderBrushKey}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ActiveForegroundBrushKey}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="8,4" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="BorderThickness"
                        Value="2" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource AccentBrushKey}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource AccentForegroundBrushKey}" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Background"
                        Value="{DynamicResource InactiveBackgroundBrushKey}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource InactiveBorderBrushKey}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource InactiveForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
