<metro:MetroWindow x:Class="ResinTimer.UI.TimerWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:tb="http://www.hardcodet.net/taskbar"
                   xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
                   xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
                   xmlns:utils="http://schemes.grabacr.net/winfx/2015/personal/controls"
                   xmlns:ui="clr-namespace:ResinTimer.UI"
                   xmlns:bindings="clr-namespace:ResinTimer.UI.Bindings"
                   xmlns:controls="clr-namespace:ResinTimer.UI.Controls"
                   mc:Ignorable="d"
                   Title="{Binding Title}"
                   Width="400"
                   MinWidth="400"
                   MaxWidth="400"
                   Height="160"
                   MinHeight="160"
                   MaxHeight="160"
                   FontSize="14"
                   HasDefaultCaptionBar="False"
                   IsRestoringWindowPlacement="True"
                   ResizeMode="CanMinimize"
                   ShowInTaskbar="{Binding ShowInTaskbar.Value}"
                   Topmost="{Binding TopMost.Value}"
                   UseLayoutRounding="True"
                   d:DataContext="{d:DesignInstance {x:Type bindings:DesignTimeTimerWindowViewModel}, IsDesignTimeCreatable=True}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ResinTimer;component/UI/_Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="ContentRendered">
            <livet:LivetCallMethodAction MethodTarget="{Binding}"
                                         MethodName="Initialize" />
        </b:EventTrigger>
        <b:EventTrigger EventName="Closed">
            <livet:DataContextDisposeAction />
        </b:EventTrigger>

        <livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
                                         MessageKey="{x:Static bindings:TimerWindowViewModel.ShowOptionWindowMessageKey}">
            <livet:TransitionInteractionMessageAction WindowType="{x:Type ui:MainWindow}"
                                                      Mode="NewOrActive"
                                                      IsOwned="False" />
        </livet:InteractionMessageTrigger>
    </b:Interaction.Triggers>

    <Window.DataContext>
        <bindings:TimerWindowViewModel />
    </Window.DataContext>

    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <tb:TaskbarIcon x:Name="TaskbarIcon"
                        x:FieldModifier="private"
                        Visibility="Collapsed"
                        IconSource="/Assets/Icons/Tasktray.ico" />

        <StackPanel Grid.Row="0"
                    Grid.Column="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Margin="0, -8, -8, 0">
            <metro:CaptionButton WindowAction="None"
                                 Content="&#xF8B0;">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="Click">
                        <b:CallMethodAction TargetObject="{Binding}"
                                            MethodName="Settings" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </metro:CaptionButton>
            <metro:CaptionButton WindowAction="None"
                                 Content="&#xE921;"
                                 Click="Hide" />
            <metro:CaptionButton WindowAction="Close" />
        </StackPanel>

        <Grid Grid.Row="0"
              Grid.RowSpan="2"
              Grid.Column="0"
              Margin="8">
            <controls:RadialProgressBar Value="{Binding Timer.CurrentResin.Value}"
                                        Maximum="{Binding Timer.MaxResin.Value}"
                                        Minimum="{Binding Timer.MinResin.Value}"
                                        Thickness="2"
                                        Width="120"
                                        Height="120" />
            <StackPanel HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <Panel.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground"
                                Value="{DynamicResource ActiveForegroundBrushKey}" />
                        <Setter Property="HorizontalAlignment"
                                Value="Center" />
                    </Style>
                </Panel.Resources>
                <TextBlock Text="{Binding Timer.CurrentResin.Value, Mode=OneWay}"
                           FontSize="50"
                           Margin="0, -4" />
                <Border Background="{DynamicResource ForegroundBrushKey}"
                        Width="80"
                        Height=".99" />
                <TextBlock Text="{Binding Timer.RemainingTime.Value, StringFormat={}{0:hh\\:mm\\:ss}, ConverterCulture=ja-jP}"
                           FontSize="20" />
                <Border Height="12" />
            </StackPanel>
        </Grid>

        <StackPanel Grid.Row="1"
                    Grid.Column="1"
                    Margin="4">
            <StackPanel DockPanel.Dock="Bottom"
                        Width="230">
                <DockPanel Margin="4">
                    <TextBlock Text="回復"
                               Foreground="{DynamicResource ForegroundBrushKey}"
                               FontSize="16"
                               VerticalAlignment="Center"
                               Margin="0,3,8,0" />
                    <TextBlock Text="{Binding Timer.OverflowingTime.Value, StringFormat={}{0:M/d HH\\:mm\\:ss}, ConverterCulture=ja-jP}"
                               Foreground="{DynamicResource ActiveForegroundBrushKey}"
                               FontSize="24" />
                </DockPanel>

                <DockPanel Margin="2">
                    <utils:CallMethodButton DockPanel.Dock="Right"
                                            MethodName="Update"
                                            controls:Iconic.Content="&#xE777;|更新"
                                            Margin="2" />
                    <Border Width="4"
                            DockPanel.Dock="Right" />
                    <metro:PromptTextBox Text="{Binding NewResin.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Prompt="樹脂の入力"
                                         FontSize="16"
                                         Margin="2">
                        <b:Interaction.Triggers>
                            <b:KeyTrigger Key="Return"
                                          FiredOn="KeyDown">
                                <livet:LivetCallMethodAction MethodTarget="{Binding}"
                                                             MethodName="Update" />
                            </b:KeyTrigger>
                        </b:Interaction.Triggers>
                    </metro:PromptTextBox>
                </DockPanel>

                <UniformGrid Rows="1"
                             Margin="0">
                    <Panel.Resources>
                        <Style TargetType="{x:Type utils:CallMethodButton}">
                            <Setter Property="Padding"
                                    Value="4" />
                            <Setter Property="Margin"
                                    Value="4" />
                            <Setter Property="MethodName"
                                    Value="Increase" />
                        </Style>
                    </Panel.Resources>
                    <utils:CallMethodButton Content="-60"
                                            MethodParameter="-60" />
                    <utils:CallMethodButton Content="-40"
                                            MethodParameter="-40" />
                    <utils:CallMethodButton Content="-30"
                                            MethodParameter="-30" />
                    <utils:CallMethodButton Content="-20"
                                            MethodParameter="-20" />
                    <utils:CallMethodButton Content="+60"
                                            MethodParameter="60" />
                </UniformGrid>
            </StackPanel>
        </StackPanel>
    </Grid>
</metro:MetroWindow>
